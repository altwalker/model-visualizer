var ModelVisualizer=function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/",r(r.s=1)}([function(e,t){e.exports=dagreD3},function(e,t,r){e.exports=r(3)},function(e,t,r){},function(e,t,r){"use strict";r.r(t);var a=r(0),n=r.n(a),o={name:"Default model",models:[{name:"ModelName",generator:"random(edge_coverage(100) && vertex_coverage(100))",startElementId:"v0",vertices:[{id:"v0",name:"vertex_A"},{id:"v1",name:"vertex_B"}],edges:[{id:"e0",name:"edge_A",sourceVertexId:"v0",targetVertexId:"v1"}]}]},s=0;function d(e,t){let r={id:e.id,label:e.name,class:"node-label"};return e.sharedState&&(r.sharedState=e.sharedState),e.properties&&e.properties.blocked&&(r.class+=" node-blocked",r.blocked=!0),e.description&&(r.description=e.description),e.properties&&(r.properties=e.properties),t.includes(e.id)&&(r.class+=" node-start"),"fake_vertex"===e.name&&(r.class+=" node-fake"),r}function i(e){let t={id:e.id,targetVertexId:e.targetVertexId,label:e.name,class:"edge-label"};return e.sourceVertexId&&(t.sourceVertexId=e.sourceVertexId),e.guard&&(t.guard=e.guard),e.actions&&(t.actions=e.actions),t}function l(e,t,r){let a={id:"fake_vertex"+(s+=1),name:"fake_vertex",description:"Fake vertex created for starting edge."};e.setNode(a.id,d(a,r)),e.setEdge(a.id,t.targetVertexId,i(t),t.id)}function c(e,t){let r=e.node(t),a="";return r.blocked&&(a+="<span class='font-weight-bolder'>BLOCKED</span><br/>"),a+="Id: <span class='font-weight-bolder'>"+r.id+"</span><br/>",r.description&&(a+="Description: <span class='font-weight-bolder'>"+r.description+"</span><br/>"),r.sharedState&&(a+="Shared State: <span class='font-weight-bolder'>"+r.sharedState+"</span><br/>"),r.properties&&(a+="<br/>Properties: <br/>",Object.keys(r.properties).forEach(e=>{a+=e+": <span class='font-weight-bolder'>"+r.properties[e]+"</span><br/>"})),a}function u(e,t){let r=e.edge(t.v,t.w,t.name),a="";return a+="Id: <span class='font-weight-bolder'>"+r.id+"</span><br/>",r.sourceVertexId&&(a+="Source Vertex Id: <span class='font-weight-bolder'>"+r.sourceVertexId+"</span><br/>"),a+="Target Vertex Id: <span class='font-weight-bolder'>"+r.targetVertexId+"</span><br/>",r.guard&&(a+="<br/>Guard: <span class='code'>"+r.guard+"</span><br/>"),r.actions&&(a+="<br/>Actions: <br/>",r.actions.forEach(e=>{a+="<span class='code'>"+e+"</span><br/>"})),a}function f(e,t,r,a,n){const o=12,s=12;e.selectAll(r).on("mouseover",e=>{t.transition().style("display","block").style("opacity",1),t.html(a(n,e)).style("left",d3.event.pageX+o+"px").style("top",d3.event.pageY+s+"px").style("cursor","pointer")}).on("mouseout",e=>{t.transition().style("display","none").style("opacity",0).style("cursor","auto")})}function p(e,t){const r=e.offsetWidth,a=e.offsetHeight;var o=d3.select(e).select("svg");o.empty()&&(o=d3.select(e).append("svg")),o.attr("width",r).attr("height",a);var s=o.select("g");s.empty()&&(s=o.append("g"));var d=d3.zoom().on("zoom",function(){s.attr("transform",d3.event.transform)});o.call(d),(new n.a.render)(s,t);o.call(d.transform,d3.zoomIdentity.translate((o.attr("width")-1*t.graph().width)/2,20).scale(1)),function(e,t){var r=d3.select("body").append("div").attr("class","tooltip").style("display","none").style("opacity",0);f(e,r,".node",c,t),f(e,r,".edgePath, .edgeLabel",u,t)}(o,t)}function h(e,t){p(e,function(e){s=0;var t=new n.a.graphlib.Graph({multigraph:!0}).setGraph({}),r=e.reduce((e,t)=>e.concat(t.vertices),[]),a=e.reduce((e,t)=>e.concat(t.edges),[]),o=e.map(e=>e.startElementId),c=r.reduce((e,t)=>(t.sharedState&&(e.hasOwnProperty(t.sharedState)?e[t.sharedState].push(t.id):e[t.sharedState]=[t.id]),e),{}),u=Object.keys(c);r.forEach(function(e){t.setNode(e.id,d(e,o))}),a.forEach(function(e){e.sourceVertexId?t.setEdge(e.sourceVertexId,e.targetVertexId,i(e),e.id):l(t,e,o)});const f=d3.scaleOrdinal().domain(u).range(d3.quantize(e=>d3.interpolateWarm(.4*e+.3),Math.max(u.length,2)));return u,u.map(e=>f(e)),t.nodes().forEach(function(e){var r=t.node(e);r.rx=r.ry=5,u.forEach(t=>{c[t].includes(e)&&(r.style="fill: "+f(t))})}),t}(t.models))}r(2);r.d(t,"default",function(){return m});class m{constructor(e,t){if(!e)throw Error("The container for rendering the model is required");("string"==typeof e||e instanceof string)&&(e=document.getElementById(e)),t||(t=o),this.container=e,this.update(t)}validate(e){console.debug("Validating"),function(e){let t=e.models;if(!t)throw"Models should not be empty.";var r={},a={},n=!1;if(t.forEach(e=>{if(function(e){if(!e.name)throw"Each model must have an unique name.";if(!e.generator)throw"Each model must a have a generator.";if(!e.vertices)throw"Each model must have a list of vertices.";if(!e.edges)throw"Each model must have a list of eadges."}(e),e.vertices.forEach(e=>{if(function(e){if(!e.id)throw"Each vertex must have an unique id.";if(!e.name)throw"Each vertex must have a name."}(e),r[e.id])throw`Vertex id ${e.id} appears at least 2 times all models. Vertex ids should be unique across all models.`;r[e.id]=!0}),e.edges.forEach(e=>{if(function(e){if(!e.id)throw"Each edge must have an unique id.";if(!e.name)throw"Each edge must have a name.";if(!e.targetVertexId);}(e),a[e.id])throw`Edge id ${e.id} appears at least 2 times in the model. Edge ids should be unique across all models.`;if(e.sourceVertexId&&!r[e.sourceVertexId])throw`Vertex id ${e.sourceVertexId} defined as sourceVertexId of edge id ${e.id} does not exist in vertices definition.`;if(!r[e.targetVertexId])throw`Vertex id ${e.targetVertexId} defined as targetVertexId of edge id ${e.id} does not exist in vertices definition.`;a[e.id]=!0}),e.startElementId&&!r[e.startElementId]&&!a[e.startElementId])throw`startElementId ${e.startElementId} is not a valid element.`;e.startElementId&&(n=!0)}),!n)throw"At least one model must have an startElementId."}(e)}refresh(){console.debug("Updating view"),h(this.container,this.models)}update(e){console.debug("Updating models"),this.validate(e),this.models=e,this.refresh()}}}]).default;